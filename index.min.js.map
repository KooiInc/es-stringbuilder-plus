{
  "version": 3,
  "sources": ["index.js"],
  "sourcesContent": ["const natives =  getNativeStringMethodKeys();\r\nconst interpolate = interpolateFactory();\r\nconst userExtensions = {};\r\nlet forTest = false;\r\n\r\nObject.defineProperty(StringBuilder, `describe`, { get() { return descriptionsGetter(); } });\r\nObject.defineProperty(StringBuilder, `addExtension`, {value: (name, fn) => userExtensions[name] = fn});\r\n\r\nexport { StringBuilder as default };\r\n\r\nfunction StringBuilder(str, ...args) {\r\n  const instanceValue = byContract(str, ...args);\r\n  const values = {initialValue: instanceValue, forTest: false, instanceValue,};\r\n  return Object.freeze(instantiate(values));\r\n}\r\n\r\nfunction instantiate(values) {\r\n  const instance = {\r\n    get length() { return instance.value.length; },\r\n    get initial() { return values.initialValue; },\r\n    get value() { return String(values.instanceValue); },\r\n    set value(v) { instance.is(v); },\r\n    set test(v) { forTest = v; },\r\n    get reset() { return instance.is(values.initialValue); },\r\n    get clear() { return instance.is(``); },\r\n    get empty() { return instance.is(``); },\r\n    get clone() { return StringBuilder`${instance.value}`; },\r\n    get toUpper() { return instance.is(instance.value.toUpperCase()); },\r\n    get toLower() { return instance.is(instance.value.toLowerCase()); },\r\n    get firstUp() { return instance.is(ucFirst(instance.value)); },\r\n    get wordsUp() { return instance.is(wordsFirstUp(instance.value)); },\r\n    get toDashed() { return instance.is(toDashedNotation(instance.value)); },\r\n    get toCamel() { return instance.is(toCamelcase(instance.value)); },\r\n    quot4Print(quotes = `\",\"`) { return quot(instance.value, quotes); },\r\n    is(newValue, ...args) { values.instanceValue = byContract(newValue, ...args) ?? instance.value; return instance; },\r\n    as(newValue, ...args) { return instance.is(newValue, ...args); },\r\n    quot(quotes = `\"`) { return instance.is(quot(instance.value, quotes)); },\r\n    surroundWith({l = ``, r = ``} = {}) { return instance.is(quot(instance.value, l.concat(`,${r}`))); },\r\n    indexOf(...args) { return indexOf(instance.value, ...args); },\r\n    lastIndexOf(...args) { return lastIndexOf(instance.value, ...args); },\r\n    toString() { return instance.value; },\r\n    valueOf() { return instance.value; },\r\n    prepend(str2Prepend, ...args) {\r\n      return instance.is( (str2Prepend.value ?? byContract(str2Prepend, args)).concat(instance.value) ); },\r\n    append(str2Append, ...args) {\r\n      return instance.is(instance.value.concat(str2Append.value ?? byContract(str2Append, ...args)) ); },\r\n    truncate(at, { html = false, wordBoundary = false } = {} ) {\r\n      return instance.is(truncate(instance.value, {at, html, wordBoundary})); },\r\n    remove(start, end) { return instance.is(remove(instance.value, start, end)); },\r\n    interpolate(...replacementTokens) { return instance.is(interpolate(instance.value, ...replacementTokens)); },\r\n  };\r\n  reRouteUserDefined(instance, values);\r\n  \r\n  return reRouteNatives(instance, values);\r\n}\r\n\r\nfunction reRouteUserDefined(instance, values) {\r\n  Object.entries(Object.getOwnPropertyDescriptors(userExtensions))\r\n    .forEach( ([key, meth]) => {\r\n        const getOrValue = meth.value.length === 1 ? `get` : `value`;\r\n        Object.defineProperty( instance, key, { [getOrValue]: (...args) => {\r\n            const nwValue = meth.value(instance, ...args);\r\n            return instance.is(nwValue?.value ?? nwValue);\r\n          }\r\n        } );\r\n      }\r\n    );\r\n}\r\n\r\nfunction reRouteNatives(instance, values) {\r\n  natives.chainable.forEach( key =>\r\n    instance[key] = Object.getOwnPropertyDescriptor(String.prototype, key)?.value.length\r\n      ? function(...args) { return instance.is(values.instanceValue[key]?.(...args)); }\r\n      : function() { return instance.is(values.instanceValue[key]?.()); } );\r\n  natives.valueReturn.forEach( key => {\r\n    const isFn = Object.getOwnPropertyDescriptor(String.prototype, key)?.value;\r\n    if (!isFn) { return; }\r\n    instance[key] = isFn.length\r\n      ? function(...args) { return values.instanceValue[key]?.(...args); }\r\n      : function() { return values.instanceValue[key]?.(); }\r\n  });\r\n  \r\n  return instance;\r\n}\r\n\r\nfunction getExclusion() {\r\n  // notes:\r\n  // - trimLeft/-Right are redundant (use trimStart/-End),\r\n  // - indexOf and lastIndexOf are overridden.\r\n  return `anchor,big,blink,bold,fixed,fontcolor,fontsize,italics,link,small,\r\n          strike,sub,substr,sup,trimLeft,trimRight,indexOf,lastIndexOf`\r\n    .split(`,`)\r\n    .reduce( (acc, key) => ({...acc, [key.trim()]: true}), {});\r\n}\r\n\r\nfunction toCamelcase(str2Convert) {\r\n  return str2Convert.toLowerCase()\r\n    .trim()\r\n    .split(`-`)\r\n    .map( (v, i) => i && `${v[0].toUpperCase()}${v.slice(1)}` || v)\r\n    .join(``);\r\n}\r\n\r\nfunction toDashedNotation(str2Convert) {\r\n  return str2Convert\r\n    .replace(/[A-Z]./g, a => `-${a.toLowerCase()}`)\r\n    .replace(/^-|-$/, ``);\r\n}\r\n\r\nfunction ucFirst(value) {\r\n  const startSpaces = value.match(/^\\s+/);\r\n  value = value.trimStart();\r\n  return (startSpaces?.[0] ?? ``) + value[0].toUpperCase() + value.slice(1).toLowerCase();\r\n}\r\n\r\nfunction wordsFirstUp(str) {\r\n  str = str.toLowerCase().split(``);\r\n  let parsed = ``;\r\n  let prev;\r\n  \r\n  while (str.length) {\r\n    const chr = str.shift();\r\n    parsed += /\\p{L}/u.test(chr) && (!prev || !/\\p{L}|_/u.test(prev))\r\n      ? chr.toUpperCase() : chr;\r\n    prev = chr;\r\n  }\r\n  \r\n  return parsed;\r\n}\r\n\r\nfunction getNativeStringMethodKeys() {\r\n  const excluded = getExclusion();\r\n  const excludeFromChainRE = /^(at|charAt|codePointAt)$/i;\r\n  const allNativeStringDescriptors = Object.entries(Object.getOwnPropertyDescriptors(String.prototype));\r\n  const checkReturnValue = (key, v) => v.value instanceof Function && typeof `abc`[key]() || `n/a`;\r\n  const chainable = allNativeStringDescriptors.filter( ([key, v]) =>\r\n      !excluded[key] && !excludeFromChainRE.test(key) && checkReturnValue(key, v) === `string` )\r\n    .map( ([key,]) => key );\r\n  const valueReturn = allNativeStringDescriptors.filter( ([key, v]) =>\r\n      !excluded[key] && (excludeFromChainRE.test(key) || checkReturnValue(key, v) !== `string`) )\r\n    .map( ([key,]) => key );\r\n  \r\n  return { chainable, valueReturn }\r\n}\r\n\r\nfunction quot(str, chr = `\",\"`) {\r\n  const [c1, c2] = chr.split(`,`);\r\n  return `${c1}${str}${c2 ?? c1}`;\r\n}\r\n\r\nfunction truncate( str, {at, html = false, wordBoundary = false} = {} ) {\r\n  if (!at || !(+at) || str.length <= at) { return str; }\r\n  let subString = str.slice(0, at);\r\n  const endsWith = html ? \"&hellip;\" : `...`;\r\n  const lastWordBoundary = [...subString.matchAll(/\\b([\\s'\".,?!;:)\\]])/g)]?.pop()?.index;\r\n  subString = wordBoundary ? subString.slice(0, lastWordBoundary) : subString;\r\n  return subString + endsWith;\r\n}\r\n\r\nfunction remove(str, start, end) {\r\n  return str.replace(str.slice(start || 0, end || str.length), ``);\r\n}\r\n\r\nfunction isStringOrTemplate(str) {\r\n  str = str?.constructor === Number ? String(str) : str;\r\n  return str?.constructor === String || str?.raw;\r\n}\r\n\r\nfunction byContract(str, ...args) {\r\n  const isMet = isStringOrTemplate(str);\r\n  if (!isMet && !forTest) { console.info(`\u2718 String contract not met: input [${\r\n    String(str)?.slice(0, 15)}] not a (template) string or number`); }\r\n  return String(!isMet ? `` : str.raw ? String.raw({ raw: str }, ...args) : str ?? ``);\r\n}\r\n\r\n// (last)indexOf should deliver undefined if nothing was found.\r\n// SEE https://youtu.be/99Zacm7SsWQ?t=2101\r\nfunction indexOf(str, findMe, fromIndex) {\r\n  const index = str.indexOf(findMe, fromIndex);\r\n  return index < 0 ? undefined : index;\r\n}\r\n\r\nfunction lastIndexOf(str, findMe, beforeIndex) {\r\n  const index = str.lastIndexOf(findMe, beforeIndex);\r\n  return index < 0 ? undefined : index;\r\n}\r\n\r\nfunction descriptionsGetter() {\r\n  const instanceProps = Object.entries(Object.getOwnPropertyDescriptors(StringBuilder``));\r\n  const userXtensions = Object.keys(userExtensions);\r\n  const allNatives = natives.chainable.concat(natives.valueReturn).filter( v => !/indexof/i.test(v) );\r\n  \r\n  return instanceProps\r\n    .map( ([key, descr]) => {\r\n      if (/name|prototype|test/i.test(key) || allNatives.find(nkey => key === nkey)) { return; }\r\n      const props = [];\r\n      const isValueReturn = /^(tostring|valueof|initial|length|indexof|lastindexof|clone|quot4Print)$/i.test(key);\r\n      const isMethod = !descr.get && !descr.set && descr.value instanceof Function;\r\n      const argsClause = isMethod ? descr.value.toString().match(/(\\(.+?\\))/)?.shift() ?? `()` : ``;\r\n      \r\n      if (descr.get) { props.push(`getter`); }\r\n      if (descr.value) { props.push(`method`); }\r\n      if (/indexof/i.test(key)) { props.push(`native override`); }\r\n      if (isValueReturn) {\r\n        props.push(`value return (not mutating)`);\r\n        return `${key}${argsClause} [${props.join(`, `)}]`;\r\n      }\r\n      \r\n      const methodStringified = String(descr.get ?? descr.value).replace(/\\s{2}/g, ` `).trim();\r\n      const isUserExtension = userXtensions.find(ky => ky === key);\r\n      const isChainable = isUserExtension || /return instance|^(empty|reset|is)/i.test(methodStringified);\r\n      \r\n      if (descr.set) { props.push(`setter (mutates)`); }\r\n      if (isUserExtension) { props.push (`user extension`) }\r\n      if (isChainable) { props.push(`chainable (mutates)`); }\r\n      \r\n      return `${key}${argsClause} [${props.join(`, `)}]`;\r\n    }).filter(v => v).sort( (a, b) => a.localeCompare(b) );\r\n}\r\n\r\nfunction interpolateFactory() {\r\n  const {isStringOrNumber, isObject, invalidate, replacement, replacer, replace} = {\r\n    isStringOrNumber: v => [String, Number].find(vv => vv === Object.getPrototypeOf( v ?? {} )?.constructor),\r\n    isObject: v => Object.getPrototypeOf( v ?? `` )?.constructor === Object,\r\n    invalidate: (defaultReplacer, key) => defaultReplacer ?? `{${key}}`,\r\n    replacement: (key, t, defaultReplacer) =>\r\n      !isStringOrNumber(t[key]) || (!defaultReplacer && `${t[key]}`.trim() === ``)\r\n        ? invalidate(defaultReplacer, key) : t[key] ?? invalidate(defaultReplacer, key),\r\n    replacer: (token, defaultReplacer) => (...args) =>\r\n      replacement( args.find(a => a.key).key ?? `_`, token, defaultReplacer ),\r\n    replace: (str, token, defaultReplacer) =>\r\n      str.replace( /\\{(?<key>[a-z_\\d]+)}/gim, replacer(token, defaultReplacer) ),\r\n  };\r\n  const interpolate = (str, defaultReplacer, ...tokens) => tokens.flat()\r\n    .reduce( (acc, token) =>\r\n      acc.concat(!isObject(token) ? `` : replace(str, token, defaultReplacer )), ``);\r\n  \r\n  return (str, ...tokens) => {\r\n    const defaultReplacer = isStringOrNumber(tokens[0]) ? String(tokens.shift()) : undefined;\r\n    return interpolate(str, defaultReplacer, ...tokens)\r\n  }\r\n}"],
  "mappings": "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",
  "names": ["natives", "getNativeStringMethodKeys", "interpolate", "interpolateFactory", "userExtensions", "forTest", "StringBuilder", "descriptionsGetter", "name", "fn", "StringBuilder", "str", "args", "instanceValue", "byContract", "instantiate", "values", "instance", "v", "forTest", "ucFirst", "wordsFirstUp", "toDashedNotation", "toCamelcase", "quotes", "quot", "newValue", "l", "indexOf", "lastIndexOf", "str2Prepend", "str2Append", "at", "html", "wordBoundary", "truncate", "start", "end", "remove", "replacementTokens", "interpolate", "reRouteUserDefined", "reRouteNatives", "userExtensions", "key", "meth", "getOrValue", "nwValue", "natives", "isFn", "getExclusion", "acc", "str2Convert", "i", "a", "value", "startSpaces", "parsed", "prev", "chr", "getNativeStringMethodKeys", "excluded", "excludeFromChainRE", "allNativeStringDescriptors", "checkReturnValue", "chainable", "valueReturn", "c1", "c2", "subString", "endsWith", "lastWordBoundary", "isStringOrTemplate", "isMet", "findMe", "fromIndex", "index", "beforeIndex", "descriptionsGetter", "instanceProps", "userXtensions", "allNatives", "descr", "nkey", "props", "isValueReturn", "argsClause", "methodStringified", "isUserExtension", "ky", "isChainable", "b", "interpolateFactory", "isStringOrNumber", "isObject", "invalidate", "replacement", "replacer", "replace", "vv", "defaultReplacer", "t", "token", "tokens"]
}
